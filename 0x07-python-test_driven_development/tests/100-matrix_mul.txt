The ``100-matrix_mul`` module
===============================

Using ``matrix_mul``
------------------------

    >>> matrix_mul = __import__('100-matrix_mul').matrix_mul

Passing Matrix list
    >>> matrix_mul([[1, 2], [3, 4]], [[1, 2], [3, 4]])
    [[7, 10], [15, 22]]

Passing  tuple
    >>> matrix_mul(([1, 2], [3, 4]), ([1, 2], [3, 4]))
    Traceback (most recent call last):
	       ...
    TypeError: m_a must be a list

Passing  tuple
    >>> matrix_mul(([1, 2], [3, 4]), [[1, 2], [3, 4]])
    Traceback (most recent call last):
	       ...
    TypeError: m_a must be a list

Passing  argument 2 as tuples
    >>> matrix_mul([[1, 2], [3, 4]], ([1, 2], [3, 4]))
    Traceback (most recent call last):
	       ...
    TypeError: m_b must be a list


Passing  argument 2 as tuples
    >>> matrix_mul({[1, 2], [3, 4]}, ([1, 2], [3, 4]))
    Traceback (most recent call last):
	       ...
    TypeError: unhashable type: 'list'

Passing  list of tuple
    >>> matrix_mul([(1, 2), [3, 4]], [[1, 2], [3, 4]])
    Traceback (most recent call last):
	       ...
    TypeError: m_a must be a list of lists

Passing  argument 2 as tuples
    >>> matrix_mul([[1, 2], [3, 4]], [[1, 2], (3, 4)])
    Traceback (most recent call last):
               ...
    TypeError: m_b must be a list of lists

Passing  argument 2 as tuples
    >>> matrix_mul([[1], [3, 4]], [[1, 2], (3, 4)])
    Traceback (most recent call last):
	       ...
    ValueError: m_a and m_b can't be multiplied


Passing size
    >>> matrix_mul([[1, 3]], [[1, 2], (3, 4)])
    Traceback (most recent call last):
	       ...
    TypeError: m_b must be a list of lists

Passing size
    >>> matrix_mul([[1, 3]],)
    Traceback (most recent call last):
	       ...
    TypeError: matrix_mul() missing 1 required positional argument: 'm_b'

Passing size
    >>> matrix_mul([[1, 3]],[])
    Traceback (most recent call last):
	       ...
    ValueError: m_b can't be empty
