The ``2-matrix_divided`` module
===============================

Using ``matrix_divided``
------------------------

    >>> matrix_divided = __import__('2-matrix_divided').matrix_divided

Passing Matrix list
    >>> matrix_divided([[1, 2, 3],[4, 5, 6]], 3)
    [[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

Passing  div == 0
    >>> matrix_divided([[1, 2, 3],[4, 5, 6]], 0)
    Traceback (most recent call last):
	       ...
    ZeroDivisionError: division by zero

Passing  matrix is one list no row
    >>> matrix_divided((1, 2, 3), 0)
    Traceback (most recent call last):
	       ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats

Passing  matrix is number
    >>> matrix_divided(2, 0)
    Traceback (most recent call last):
	       ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats

Passing  arg1 is string == 0
    >>> matrix_divided("string", 0)
    Traceback (most recent call last):
	       ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats

Passing  passing
    >>> matrix_divided([[1, 2, 3],[4, 'e', 6]], 6)
    Traceback (most recent call last):
	       ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats

Passing  passing
    >>> matrix_divided([[1, 2, 3],[4, "string", 6]], 6)
    Traceback (most recent call last):
	       ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats

Passing  div is string
    >>> matrix_divided([[1, 2, 3],[4, 5, 6]], "hello")
    Traceback (most recent call last):
	       ...
    TypeError: div must be a number

Passing  div is letter
    >>> matrix_divided([[1, 2, 3],[4, 5, 6]], 'A')
    Traceback (most recent call last):
	       ...
    TypeError: div must be a number

Passing  different row size
    >>> matrix_divided([[2, 3],[4, 5, 6]], 4)
    Traceback (most recent call last):
	       ...
    TypeError: Each row of the matrix must have the same size


Passing  passing
    >>> matrix_divided([[1, 3, 9,  5, 6],[4, 3, 6]], 6)
    Traceback (most recent call last):
	       ...
    TypeError: Each row of the matrix must have the same size

Passing  infinity
    >>> matrix_divided('inf', 2)
    Traceback (most recent call last):
	       ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats

Passing  div as list
    >>> matrix_divided([[1, 2, 3],[4, 5, 6]], [2, 3 ,4])
    Traceback (most recent call last):
	       ...
    TypeError: div must be a number

Passing div as tuple
    >>> matrix_divided([[1, 2, 3],[4, 5, 6]], (1, 4, 5))
    Traceback (most recent call last):
	       ...
    TypeError: div must be a number

Passing  Nan
    >>> matrix_divided([[1, 2, 3],[4, 5, 6]], 'nan')
    Traceback (most recent call last):
	       ...
    TypeError: div must be a number

Passing  div as infinity
    >>> matrix_divided([[1, 2, 3],[4, 5, 6]], 'inf')
    Traceback (most recent call last):
	       ...
    TypeError: div must be a number
